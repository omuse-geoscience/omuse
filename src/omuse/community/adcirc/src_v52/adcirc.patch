diff -ruN ../adcirc/adcirc_v51_52_07/src/global_3dvs.F adcirc_src/src/global_3dvs.F
--- ../adcirc/adcirc_v51_52_07/src/global_3dvs.F	2016-02-03 17:17:47.691925620 +0100
+++ adcirc_src/src/global_3dvs.F	2016-02-19 14:54:28.074483978 +0100
@@ -19,6 +19,7 @@
      &     MNE,
      &     MNEI,
      &     MNVEL,
+     &     MNETA,
      &     MNFEN,
      &     MYProc,
      &     INPUTDIR,
@@ -323,16 +324,16 @@
       ALLOCATE( BPG(MNP,NFEN) )
 C   kmd48.33bc - allocate arrays
       ALLOCATE( NTVTot(NFEN), DV(MNP,NFEN) )
-      ALLOCATE( RESSAL(NETA,NFEN), RESSAL1(NETA,NFEN) )
-      ALLOCATE( RESSAL2(NETA,NFEN), RESTEMP(NETA,NFEN) )
-      ALLOCATE( RESTEMP1(NETA,NFEN), RESTEMP2(NETA,NFEN) )
+      ALLOCATE( RESSAL(MNETA,NFEN), RESSAL1(MNETA,NFEN) )
+      ALLOCATE( RESSAL2(MNETA,NFEN), RESTEMP(MNETA,NFEN) )
+      ALLOCATE( RESTEMP1(MNETA,NFEN), RESTEMP2(MNETA,NFEN) )
       ! jgf49.60: Explicitly initialize arrays that would otherwise
       ! be used without initialization.
       EVTot(:) = 0.0d0
 C   kmd - add arrays for river boundary condition in baroclinic simulation
-      ALLOCATE( BCRivSal(NVEL,NFEN), BCRivSalN1(NVEL,NFEN) )
-      ALLOCATE( BCRivSalN2(NVEL,NFEN), BCRivTemp(NVEL,NFEN) )
-      ALLOCATE( BCRivTempN1(NVEL,NFEN), BCRivTempN2(NVEL,NFEN) )
+      ALLOCATE( BCRivSal(MNVEL,NFEN), BCRivSalN1(MNVEL,NFEN) )
+      ALLOCATE( BCRivSalN2(MNVEL,NFEN), BCRivTemp(MNVEL,NFEN) )
+      ALLOCATE( BCRivTempN1(MNVEL,NFEN), BCRivTempN2(MNVEL,NFEN) )
       RETURN
       END SUBROUTINE ALLOC_3DVS
 
diff -ruN ../adcirc/adcirc_v51_52_07/src/read_input.F adcirc_src/src/read_input.F
--- ../adcirc/adcirc_v51_52_07/src/read_input.F	2016-02-03 17:17:47.716925619 +0100
+++ adcirc_src/src/read_input.F	2016-06-20 21:14:51.862517450 +0200
@@ -173,13 +173,14 @@
       call readMesh()
 C
 C     ALLOCATE ARRAYS Dimensioned by MNP and MNE
-      call alloc_main1a()
-      ! jgf51.21.13: Allocate boundary condition arrays dimensioned by
-      ! mnope and mneta
-      call alloc_main2()
-      ! jgf51.21.13: Allocate boundary condition arrays dimensioned by
-      ! mnvel 
-      call alloc_main3()
+Ctemporaryfix, fip 12052015
+!~       call alloc_main1a()
+!~       ! jgf51.21.13: Allocate boundary condition arrays dimensioned by
+!~       ! mnope and mneta
+!~       call alloc_main2()
+!~       ! jgf51.21.13: Allocate boundary condition arrays dimensioned by
+!~       ! mnvel 
+!~       call alloc_main3()
 C...
 C...  OPEN UNIT 15 INPUT FILE (control parameters and periodic boundary conditions)
 C...
@@ -785,6 +786,11 @@
       WRITE(16,*) '         CTIP             = ',CTIP
       WRITE(16,*) '         CHARMV           = ',CHARMV
 
+Ctemporary fix, fip 12052015
+      call alloc_main1a()
+      call alloc_main2()
+      call alloc_main3()
+
 C...
 C...  READ AND PROCESS NOLIBF - NONLINEAR BOTTOM FRICTION OPTION
 C...
@@ -2797,6 +2803,7 @@
          MNFFR = NFFR
          IF (NFFR.EQ.0) MNFFR = 1
          IF (NFFR.EQ.-1) MNFFR = 1
+         IF (NFFR.EQ.-2) MNFFR = 1
 
 C.....Allocate space for periodic normal flow boundary conditions
          call alloc_main6()
diff -ruN ../adcirc/adcirc_v51_52_07/src/sizes.F adcirc_src/src/sizes.F
--- ../adcirc/adcirc_v51_52_07/src/sizes.F	2016-02-03 17:17:47.718925619 +0100
+++ adcirc_src/src/sizes.F	2016-02-03 17:17:48.051925605 +0100
@@ -147,8 +147,8 @@
       naFileNameSpecified = .false.
       naFileName = 'fort.13'
 
-Casey 090527: Debug.
-      ROOTDIR = "."
+Casey 090527: Debug. AMUSE comment out
+C      ROOTDIR = "."
 
 Cobell 110518: Add compiler flag for local hot start.
 #ifdef LOCALHOT
diff -ruN ../adcirc/adcirc_v51_52_07/src/timestep.F adcirc_src/src/timestep.F
--- ../adcirc/adcirc_v51_52_07/src/timestep.F	2016-02-03 17:17:47.725925618 +0100
+++ adcirc_src/src/timestep.F	2016-06-17 14:19:29.184456274 +0200
@@ -1413,6 +1413,11 @@
          END DO
        END IF
 
+
+#ifdef AMUSE
+       call AMUSE_met_forcing(RampMete)
+#endif
+
 C
 C--------------------END MET FORCING---------------------------------------
 
@@ -1563,6 +1568,10 @@
          END IF
       END IF
 
+#ifdef AMUSE
+      if(C3D.AND.CBAROCLINIC.AND.(NOPE.GT.0)) call AMUSE_lnm_boundary()
+#endif
+
 C...
 C...  Tidal Potential Forcing
 C...  Note, the Earth tide potential reduction factor, ETRF(J) has been
@@ -1614,6 +1623,11 @@
          END DO
       ENDIF
 
+#ifdef AMUSE
+      call AMUSE_tidal_forcing()  
+#endif
+
+
 C...
 C...  Depth Averaged Baroclinic Forcing needed by GWCE and 2DDI Momentum
 C...  Compute this (divided by H, i.e., Bx/H, By/H) as a nodally averaged
@@ -1763,6 +1777,11 @@
             END DO
          ENDIF
 
+C... AMUSE flow boundary condition
+#ifdef AMUSE
+      call AMUSE_flow_boundary(RampExtFlux)  
+#endif
+
 CRAL_add_42.06f
 C     jgf46.21 Collect elevation information for river radiation b.c.
          IF(IT.EQ.FluxSettlingIT) THEN
@@ -4410,6 +4429,12 @@
             END DO
          ENDIF
       endif                                   ! NCSU Subdomain
+
+C... AMUSE elevation boundary condition
+#ifdef AMUSE
+      call AMUSE_elevation_boundary(RampElev)  
+#endif
+
       ! 
       ! jgf46.02 Added the ability to include geoid offset on the boundary.
       !
@@ -7230,6 +7255,18 @@
             BSYN1=BSY1(NM1)
             BSYN2=BSY1(NM2)
             BSYN3=BSY1(NM3)
+            BSX0N1=0.                          ! these are added because used below uninitialized otherwise
+            BSY0N1=0.                          ! it may not be correct
+            BSX0N2=0.
+            BSY0N2=0.
+            BSX0N3=0.
+            BSY0N3=0.
+            BSX2N1=0.
+            BSY2N1=0.
+            BSX2N2=0.
+            BSY2N2=0.
+            BSX2N3=0.
+            BSY2N3=0.
          ENDIF
 
          AreaIE2=Areas(IE)               !2A
@@ -7587,6 +7624,10 @@
          END DO
       ENDIF
 
+C... AMUSE elevation boundary condition
+#ifdef AMUSE
+      call AMUSE_elevation_boundary(RampElev)  
+#endif
 
 C...  IMPOSE NORMAL FLOW, RADIATION OR GRADIENT BOUNDARY CONDITIONS
 C...  ALONG FLOW BOUNDARY TO LOAD VECTOR GWCE_LV(I)
diff -ruN ../adcirc/adcirc_v51_52_07/src/transport.F adcirc_src/src/transport.F
--- ../adcirc/adcirc_v51_52_07/src/transport.F	2016-02-03 17:17:47.727925616 +0100
+++ adcirc_src/src/transport.F	2016-02-18 20:18:34.983891894 +0100
@@ -341,6 +341,10 @@
             END DO
             DEALLOCATE(TMP)
          END IF ! ends the BCFLAG_TEMP flag if loop
+#ifdef AMUSE
+      call AMUSE_surface_heat_forcing()  
+#endif
+         
       END IF  ! ends the field if loop
 
 C   kmd_rivers - add information for the weak boundary condition with
diff -ruN ../adcirc/adcirc_v51_52_07/src/vsmy.F adcirc_src/src/vsmy.F
--- ../adcirc/adcirc_v51_52_07/src/vsmy.F	2016-02-03 17:17:47.729925617 +0100
+++ adcirc_src/src/vsmy.F	2016-02-22 15:05:52.353334139 +0100
@@ -1172,6 +1172,11 @@
          END IF
       END IF
 
+#ifdef AMUSE
+      if(CBAROCLINIC.AND.(NOPE.GT.0)) call AMUSE_salt_temp_boundary()
+#endif
+
+
 !kmd - adding information for rivers - baroclinic
 
       IF ((CBaroclinic).AND.(BndBCRiver)) THEN
diff -ruN ../adcirc/adcirc_v51_52_07/work/cmplrflags.mk adcirc_src/work/cmplrflags.mk
--- ../adcirc/adcirc_v51_52_07/work/cmplrflags.mk	2016-02-03 17:17:47.898925611 +0100
+++ adcirc_src/work/cmplrflags.mk	2016-02-19 20:09:13.244694188 +0100
@@ -97,7 +97,7 @@
   PPFC            :=  ifort
   FC            :=  ifort
   PFC           :=  mpif90
-  FFLAGS1       :=  $(INCDIRS) -O2 -FI -assume byterecl -132 -i-dynamic -xSSE4.2 -assume buffered_io
+  FFLAGS1       :=  $(INCDIRS) -O2 -FI -assume byterecl -132 -i-dynamic -assume buffered_io
   ifeq ($(DEBUG),full)
      FFLAGS1       :=  $(INCDIRS) -g -O0 -traceback -debug all -check all -ftrapuv -fpe0  -i-dynamic -FI -assume byterecl -132 -DALL_TRACE -DFULL_STACK -DFLUSH_MESSAGES
   endif
@@ -1238,6 +1238,8 @@
 # i386-apple-darwin using intel
 
 ifneq (,$(findstring i386-darwin,$(MACHINE)-$(OS)))
+
+ifeq ($(compiler),intel)
   PPFC	        := ifort
   FC	        := ifort
   PFC	        := mpif77
@@ -1262,6 +1264,37 @@
      MULTIPLE := TRUE
   endif
 endif
+
+ifeq ($(compiler),gnu)
+  PPFC		:=  gfortran
+  FC		:=  gfortran
+  PFC		:=  mpif90
+  FFLAGS1	:=  $(INCDIRS) -O2 -mcmodel=medium -ffixed-line-length-none -march=k8 -m64
+  FFLAGS2	:=  $(FFLAGS1)
+  FFLAGS3	:=  $(FFLAGS1)
+  DA		:=  -DREAL8 -DLINUX -DCSCA
+  DP		:=  -DREAL8 -DLINUX -DCSCA -DCMPI -DHAVE_MPI_MOD
+  DPRE		:=  -DREAL8 -DLINUX
+  IMODS 	:=  -I
+  CC		:= gcc
+  CCBE		:= $(CC)
+  CFLAGS	:= $(INCDIRS) -O2 -mcmodel=medium -DLINUX -march=k8 -m64
+  CLIBS	:=
+  LIBS		:=
+  MSGLIBS	:=
+  ifeq ($(NETCDF),enable)
+        FLIBS          := $(FLIBS) -L$(HDF5HOME) -lhdf5 -lhdf5_fortran
+  endif
+  $(warning (INFO) Corresponding compilers and flags found in cmplrflags.mk.)
+  ifneq ($(FOUND),TRUE)
+     FOUND := TRUE
+  else
+     MULTIPLE := TRUE
+  endif
+endif
+
+
+endif
 ########################################################################
 ifneq ($(FOUND), TRUE)
      $(warning (WARNING) None of the platforms in cmplrflags.mk match your platform. As a result, the specific compilers and flags that are appropriate for you could not be specified. Please edit the cmplrflags.mk file to include your machine and operating system. Continuing with generic selections for compilers.)
